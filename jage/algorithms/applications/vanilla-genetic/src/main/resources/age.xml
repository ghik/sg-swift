<?xml version="1.0" encoding="UTF-8" ?>
<configuration xmlns="http://age.iisg.agh.edu.pl/schema/age" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://age.iisg.agh.edu.pl/schema/age http://age.iisg.agh.edu.pl/schema/age/age.xsd">

	<include file="classpath:base.xml">
		<block name="workplaces">
			<agent name="workplace" class="org.jage.workplace.IsolatedSimpleWorkplace">
				<property name="agents">
					<list>
						<agent name="agent" class="org.jage.genetic.agent.StatsCollectingAgent" >
                            <property name="statsFilename" value="${agent.statsFilename}" />
                            <property name="steps" value="${steps}" type="Integer"/>
                        </agent>
					</list>
				</property>

				<!-- Action Strategies -->
				<strategy name="geneticActionPreparator" class="org.jage.genetic.action.GeneticActionPreparator" />
				<strategy name="geneticActionComparator" class="org.jage.genetic.action.GeneticActionComparator" />

				<strategy name="initializationAction" class="org.jage.genetic.action.InitializationActionStrategy" />
				<strategy name="preselectionAction" class="org.jage.genetic.action.PreselectionActionStrategy" />
				<strategy name="variationAction" class="org.jage.genetic.action.VariationActionStrategy" />
				<strategy name="evaluationAction" class="org.jage.genetic.action.EvaluationActionStrategy" />
				<strategy name="statisticsUpdateAction" class="org.jage.genetic.action.StatisticsUpdateActionStrategy"/>
			</agent>
		</block>
		<block name="workplaceComponents" override="false">
			<!-- General Strategies -->
			<strategy name="populationFactory" class="org.jage.population.PopulationFactory">
				<property name="populationSize" type="Integer" value="${population.size}" />
			</strategy>
			<strategy name="solutionFactory" class="org.jage.solution.realvalued.RealValuedSolutionFactory" />

			<strategy name="populationEvaluator" class="org.jage.evaluation.SequentialPopulationEvaluator" />
			<strategy name="solutionEvaluator" class="org.jage.evaluation.realvalued.RastriginEvaluator" />
			<strategy name="problem" class="org.jage.problem.realvalued.RastriginProblem">
				<constructor-arg type="Integer" value="${problem.size}"/>
			</strategy>

			<strategy name="rand" class="org.jage.random.SimpleGenerator" >
				<constructor-arg type="Long" value="1234567890"/>
			</strategy>

			<!-- Genetic Strategies -->

			<strategy name="rankPreselection" class="org.jage.genetic.preselection.RankPreselection" >
				<strategy name="preselection" class="org.jage.genetic.preselection.StochasticPreselection" >
					<strategy name="scaling" class="org.jage.genetic.scaling.SimpleScaling" />
				</strategy>
			</strategy>

			<strategy name="geneticOperators" class="org.jage.variation.VariationOperator" >
				<strategy name="recombinePopulation" class="org.jage.variation.recombination.PairedRecombinePopulation">
					<property name="chanceToRecombine" type="Double" value="${individual.chanceToRecombine}"/>
					<strategy name="recombineSolutions" class="org.jage.variation.recombination.realvalued.AverageRecombine" />
				</strategy>
				<strategy name="mutatePopulation" class="org.jage.variation.mutation.IndividuallyMutatePopulation">
					<property name="chanceToMutate" type="Double" value="${individual.chanceToMutate}"/>
					<strategy name="mutateSolution" class="org.jage.variation.mutation.realvalued.NormalMicroMacroMutate">
						<property name="chanceToMutate" type="Double" value="${feature.chanceToMutate}"/>
						<property name="mutationRange" type="Double" value="${feature.mutationRange}"/>
					</strategy>
				</strategy>
			</strategy>
		</block>
	</include>
</configuration>
